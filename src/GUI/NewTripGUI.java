package GUI;

import java.text.SimpleDateFormat;
import java.util.Calendar;

public class NewTripGUI extends javax.swing.JFrame {

    private main.Users u;
    private carpoolapp.CarPoolDB cpdb;

    /**
     * Creates new form LoginGUI
     */

    public NewTripGUI() {
        initComponents();
        u = new main.Users("null", "null", "null", "null", "null", "null", "null", "null", 0, 0);

        nameLbl.setText(u.getUsername());
    }

    public NewTripGUI(main.Users user) {
        initComponents();
        u = user;

        nameLbl.setText(u.getUsername());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        headerPnl = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        nameLbl = new javax.swing.JLabel();
        logoutBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        departureLbl = new javax.swing.JLabel();
        arrivalLbl = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        deptTimeLbl = new javax.swing.JLabel();
        arrTimeLbl = new javax.swing.JLabel();
        noOfSeatsLbl = new javax.swing.JLabel();
        priceLbl = new javax.swing.JLabel();
        departureTf = new javax.swing.JTextField();
        arrivalTf = new javax.swing.JTextField();
        distanceTf = new javax.swing.JTextField();
        deptDateTf = new javax.swing.JTextField();
        deptMonthTf = new javax.swing.JTextField();
        deptYearTf = new javax.swing.JTextField();
        deptHourTf = new javax.swing.JTextField();
        deptMinsTf = new javax.swing.JTextField();
        arrDateTf = new javax.swing.JTextField();
        arrHourTf = new javax.swing.JTextField();
        arrMonthTf = new javax.swing.JTextField();
        arrMinsTf = new javax.swing.JTextField();
        arrYearTf = new javax.swing.JTextField();
        noOfSeatsTf = new javax.swing.JTextField();
        priceTf = new javax.swing.JTextField();
        deptDateLbl = new javax.swing.JLabel();
        arrDateLbl = new javax.swing.JLabel();
        heading1Lbl = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        luggageCB = new javax.swing.JCheckBox();
        smokingCB = new javax.swing.JCheckBox();
        petsCB = new javax.swing.JCheckBox();
        chattyCB = new javax.swing.JCheckBox();
        musicLoverCB = new javax.swing.JCheckBox();
        descriptionLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionTA = new javax.swing.JTextArea();
        preferencesLbl = new javax.swing.JLabel();
        addTrip = new javax.swing.JButton();
        warningLbl = new javax.swing.JLabel();
        homeBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(400, 660));
        setMinimumSize(new java.awt.Dimension(400, 660));
        setSize(new java.awt.Dimension(400, 660));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(400, 660));
        jPanel1.setMinimumSize(new java.awt.Dimension(400, 660));
        jPanel1.setName(""); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 660));

        headerPnl.setBackground(new java.awt.Color(179, 255, 179));
        headerPnl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        headerPnl.setMaximumSize(new java.awt.Dimension(400, 100));
        headerPnl.setMinimumSize(new java.awt.Dimension(400, 100));
        headerPnl.setPreferredSize(new java.awt.Dimension(400, 100));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/carduill.png"))); // NOI18N
        jLabel2.setMaximumSize(new java.awt.Dimension(254, 154));

        javax.swing.GroupLayout headerPnlLayout = new javax.swing.GroupLayout(headerPnl);
        headerPnl.setLayout(headerPnlLayout);
        headerPnlLayout.setHorizontalGroup(
            headerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(392, Short.MAX_VALUE))
        );
        headerPnlLayout.setVerticalGroup(
            headerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                .addContainerGap())
        );

        nameLbl.setMaximumSize(new java.awt.Dimension(400, 400));

        logoutBtn.setBackground(new java.awt.Color(0, 153, 204));
        logoutBtn.setForeground(new java.awt.Color(254, 254, 254));
        logoutBtn.setText("LOGOUT");
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        departureLbl.setText("Leaving from");

        arrivalLbl.setText("Travelling to");

        jLabel1.setText("Distance (in kms)");

        deptTimeLbl.setText("Time");

        arrTimeLbl.setText("Time");

        noOfSeatsLbl.setText("No. of seats available");

        priceLbl.setText("Price per seat");

        deptDateTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deptDateTfActionPerformed(evt);
            }
        });

        deptYearTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deptYearTfActionPerformed(evt);
            }
        });

        deptHourTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deptHourTfActionPerformed(evt);
            }
        });

        deptMinsTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deptMinsTfActionPerformed(evt);
            }
        });

        arrDateTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrDateTfActionPerformed(evt);
            }
        });

        arrHourTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrHourTfActionPerformed(evt);
            }
        });

        arrMonthTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrMonthTfActionPerformed(evt);
            }
        });

        arrMinsTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrMinsTfActionPerformed(evt);
            }
        });

        arrYearTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrYearTfActionPerformed(evt);
            }
        });

        deptDateLbl.setText("Date");

        arrDateLbl.setText("Date");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(departureLbl)
                            .addComponent(arrivalLbl)
                            .addComponent(noOfSeatsLbl))
                        .addGap(9, 9, 9)
                        .addComponent(noOfSeatsTf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(priceLbl)
                        .addGap(18, 18, 18)
                        .addComponent(priceTf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(deptDateLbl)
                            .addComponent(arrDateLbl))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(deptDateTf, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(arrDateTf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(arrMonthTf, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(arrYearTf, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(arrTimeLbl))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(deptMonthTf, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(deptYearTf, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(deptTimeLbl)
                                        .addGap(1, 1, 1)))
                                .addGap(14, 14, 14)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(deptHourTf, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(deptMinsTf, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(arrHourTf, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(arrMinsTf, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(30, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(departureTf, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(arrivalTf, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(distanceTf, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(departureLbl)
                    .addComponent(departureTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deptTimeLbl)
                    .addComponent(deptMinsTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deptHourTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deptDateTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deptMonthTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deptYearTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deptDateLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(arrivalTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arrivalLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(arrMinsTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arrHourTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arrTimeLbl)
                    .addComponent(arrMonthTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arrYearTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arrDateTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arrDateLbl))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(distanceTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceLbl)
                    .addComponent(priceTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(noOfSeatsLbl)
                    .addComponent(noOfSeatsTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        heading1Lbl.setText("Let's set up the trip!");

        luggageCB.setText("Luggage allowed");

        smokingCB.setText("Smoking allowed");

        petsCB.setText("Pets allowed");

        chattyCB.setText("Chatty driver");

        musicLoverCB.setText("Likes music");

        descriptionLbl.setText("A message for your fellow passengers");

        descriptionTA.setColumns(20);
        descriptionTA.setRows(5);
        jScrollPane1.setViewportView(descriptionTA);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionLbl)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(luggageCB)
                            .addComponent(musicLoverCB)
                            .addComponent(petsCB))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chattyCB)
                            .addComponent(smokingCB)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(luggageCB)
                    .addComponent(smokingCB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(petsCB)
                    .addComponent(chattyCB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(musicLoverCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(descriptionLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        preferencesLbl.setText("Additional info about the trip");

        addTrip.setBackground(new java.awt.Color(0, 153, 204));
        addTrip.setForeground(new java.awt.Color(254, 254, 254));
        addTrip.setText("POST A TRIP");
        addTrip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTripActionPerformed(evt);
            }
        });

        warningLbl.setForeground(new java.awt.Color(255, 0, 0));
        warningLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        homeBtn.setBackground(new java.awt.Color(0, 153, 204));
        homeBtn.setForeground(new java.awt.Color(254, 254, 254));
        homeBtn.setText("Home");
        homeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(headerPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(heading1Lbl)
                            .addComponent(preferencesLbl))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(warningLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(logoutBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addTrip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(161, 161, 161))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(nameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(homeBtn))
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(headerPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(homeBtn))
                .addGap(18, 18, 18)
                .addComponent(heading1Lbl)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(preferencesLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addTrip)
                    .addComponent(warningLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(logoutBtn)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addTripActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTripActionPerformed

        cpdb = new carpoolapp.CarPoolDB();
        
        
        
        warningLbl.setText("");
        
        //checking for empty fields in order to preveent empty submissions and warn the user about the missing information
        
        if (departureTf.getText().equals("") || deptDateTf.getText().equals("") || deptMonthTf.getText().equals("") || deptYearTf.getText().equals("")
            || deptHourTf.getText().equals("") || deptMinsTf.getText().equals("") || arrDateTf.getText().equals("") || arrMonthTf.getText().equals("")
            || arrYearTf.getText().equals("") || arrHourTf.getText().equals("") || arrMinsTf.getText().equals("") || distanceTf.getText().equals("")
            || noOfSeatsTf.getText().equals("") || priceTf.getText().equals("") || descriptionTA.getText().equals("")) {
            warningLbl.setText("All the fields need to be filled out.");
        }
        
        // setting restrictions for non-existant dates so the incorrect dates would not be accepted - prevents database errors
        
        else if ((deptDateTf.getText().equals("31") && deptMonthTf.getText().equals("09")) || (deptDateTf.getText().equals("31") && deptMonthTf.getText().equals("11"))
               || (arrDateTf.getText().equals("31") && arrMonthTf.getText().equals("09")) || (arrDateTf.getText().equals("31") && arrMonthTf.getText().equals("11"))) {
            warningLbl.setText("Incorrect date format.");
        }
        
        // setting up date restrictions - accepting only bookings between 01/07/2020 and 31/12/2020 for both departures and arrivals
        
        else if (!(deptDateTf.getText().equals("01") || deptDateTf.getText().equals("02") || deptDateTf.getText().equals("03") || deptDateTf.getText().equals("04")
                || deptDateTf.getText().equals("05") || deptDateTf.getText().equals("06") || deptDateTf.getText().equals("07") || deptDateTf.getText().equals("08")
                || deptDateTf.getText().equals("09") || deptDateTf.getText().equals("10") || deptDateTf.getText().equals("11") || deptDateTf.getText().equals("12")
                || deptDateTf.getText().equals("13") || deptDateTf.getText().equals("14") || deptDateTf.getText().equals("15") || deptDateTf.getText().equals("16")
                || deptDateTf.getText().equals("17") || deptDateTf.getText().equals("18") || deptDateTf.getText().equals("19") || deptDateTf.getText().equals("20")
                || deptDateTf.getText().equals("21") || deptDateTf.getText().equals("22") || deptDateTf.getText().equals("23") || deptDateTf.getText().equals("24")
                || deptDateTf.getText().equals("25") || deptDateTf.getText().equals("26") || deptDateTf.getText().equals("27") || deptDateTf.getText().equals("28")
                || deptDateTf.getText().equals("29") || deptDateTf.getText().equals("30") || deptDateTf.getText().equals("31")) 
                || !(deptMonthTf.getText().equals("07") || deptMonthTf.getText().equals("08") || deptMonthTf.getText().equals("09") || deptMonthTf.getText().equals("10")
                || deptMonthTf.getText().equals("11") || deptMonthTf.getText().equals("12"))
                || !(arrDateTf.getText().equals("01")|| arrDateTf.getText().equals("02") || arrDateTf.getText().equals("03")
                || arrDateTf.getText().equals("04") || arrDateTf.getText().equals("05")
                || arrDateTf.getText().equals("06") || arrDateTf.getText().equals("07") || arrDateTf.getText().equals("08") || arrDateTf.getText().equals("09")
                || arrDateTf.getText().equals("10") || arrDateTf.getText().equals("11") || arrDateTf.getText().equals("12") || arrDateTf.getText().equals("13")
                || arrDateTf.getText().equals("14") || arrDateTf.getText().equals("15") || arrDateTf.getText().equals("16") || arrDateTf.getText().equals("17")
                || arrDateTf.getText().equals("18") || arrDateTf.getText().equals("19") || arrDateTf.getText().equals("20") || arrDateTf.getText().equals("21")
                || arrDateTf.getText().equals("22") || arrDateTf.getText().equals("23") || arrDateTf.getText().equals("24") || arrDateTf.getText().equals("25")
                || arrDateTf.getText().equals("26") || arrDateTf.getText().equals("27") || arrDateTf.getText().equals("28") || arrDateTf.getText().equals("29")
                || arrDateTf.getText().equals("30") || arrDateTf.getText().equals("31")) || 
                 !(arrMonthTf.getText().equals("07") || arrMonthTf.getText().equals("08") || arrMonthTf.getText().equals("09") || arrMonthTf.getText().equals("10")
                || arrMonthTf.getText().equals("11") || arrMonthTf.getText().equals("12")) || !(deptYearTf.getText().equals("2020"))
                || !(arrYearTf.getText().equals("2020"))) {
            warningLbl.setText("Incorrect date format.");
        }

        // setting restrictions for hours and minutes entered - departures
              
        else if (!(deptHourTf.getText().equals("01") || deptHourTf.getText().equals("02") || deptHourTf.getText().equals("03") || deptHourTf.getText().equals("04") ||
                deptHourTf.getText().equals("05") || deptHourTf.getText().equals("06") || deptHourTf.getText().equals("07") || deptHourTf.getText().equals("08") ||
                deptHourTf.getText().equals("09") || deptHourTf.getText().equals("10") || deptHourTf.getText().equals("11") || deptHourTf.getText().equals("12") ||
                deptHourTf.getText().equals("13") || deptHourTf.getText().equals("14") || deptHourTf.getText().equals("15") || deptHourTf.getText().equals("16") ||
                deptHourTf.getText().equals("17") || deptHourTf.getText().equals("18") || deptHourTf.getText().equals("19") || deptHourTf.getText().equals("20") ||
                deptHourTf.getText().equals("21") || deptHourTf.getText().equals("22") || deptHourTf.getText().equals("23") || deptHourTf.getText().equals("00")) ||
                !(deptMinsTf.getText().equals("00") || deptMinsTf.getText().equals("01") || deptMinsTf.getText().equals("02") || deptMinsTf.getText().equals("03") ||
                deptMinsTf.getText().equals("04") || deptMinsTf.getText().equals("05") || deptMinsTf.getText().equals("06") || deptMinsTf.getText().equals("07") ||
                deptMinsTf.getText().equals("08") || deptMinsTf.getText().equals("09") || deptMinsTf.getText().equals("10") || deptMinsTf.getText().equals("11") ||
                deptMinsTf.getText().equals("12") || deptMinsTf.getText().equals("13") || deptMinsTf.getText().equals("14") || deptMinsTf.getText().equals("15") ||
                deptMinsTf.getText().equals("16") || deptMinsTf.getText().equals("17") || deptMinsTf.getText().equals("18") || deptMinsTf.getText().equals("19") ||
                deptMinsTf.getText().equals("20") || deptMinsTf.getText().equals("21") || deptMinsTf.getText().equals("22") || deptMinsTf.getText().equals("23") ||
                deptMinsTf.getText().equals("24") || deptMinsTf.getText().equals("25") || deptMinsTf.getText().equals("26") || deptMinsTf.getText().equals("27") ||
                deptMinsTf.getText().equals("28") || deptMinsTf.getText().equals("29") || deptMinsTf.getText().equals("30") || deptMinsTf.getText().equals("31") || 
                deptMinsTf.getText().equals("32") || deptMinsTf.getText().equals("33") || deptMinsTf.getText().equals("34") || deptMinsTf.getText().equals("35") ||
                deptMinsTf.getText().equals("36") || deptMinsTf.getText().equals("37") || deptMinsTf.getText().equals("38") || deptMinsTf.getText().equals("39") ||
                deptMinsTf.getText().equals("40") || deptMinsTf.getText().equals("41") || deptMinsTf.getText().equals("42") || deptMinsTf.getText().equals("43") ||
                deptMinsTf.getText().equals("44") || deptMinsTf.getText().equals("45") || deptMinsTf.getText().equals("46") || deptMinsTf.getText().equals("47") ||
                deptMinsTf.getText().equals("48") || deptMinsTf.getText().equals("49") || deptMinsTf.getText().equals("50") || deptMinsTf.getText().equals("51") ||
                deptMinsTf.getText().equals("52") || deptMinsTf.getText().equals("53") || deptMinsTf.getText().equals("54") || deptMinsTf.getText().equals("55") ||
                deptMinsTf.getText().equals("56") || deptMinsTf.getText().equals("57") || deptMinsTf.getText().equals("58") || deptMinsTf.getText().equals("59"))) {
            warningLbl.setText("Incorrect time format.");
        }

        // setting restrictions for hours and minutes entered - arrivals
        
        else if (!(arrHourTf.getText().equals("01") || arrHourTf.getText().equals("02") || arrHourTf.getText().equals("03") || arrHourTf.getText().equals("04") ||
                arrHourTf.getText().equals("05") || arrHourTf.getText().equals("06") || arrHourTf.getText().equals("07") || arrHourTf.getText().equals("08") ||
                arrHourTf.getText().equals("09") || arrHourTf.getText().equals("10") || arrHourTf.getText().equals("11") || arrHourTf.getText().equals("12") ||
                arrHourTf.getText().equals("13") || arrHourTf.getText().equals("14") || arrHourTf.getText().equals("15") || arrHourTf.getText().equals("16") ||
                arrHourTf.getText().equals("17") || arrHourTf.getText().equals("18") || arrHourTf.getText().equals("19") || arrHourTf.getText().equals("20") ||
                arrHourTf.getText().equals("21") || arrHourTf.getText().equals("22") || arrHourTf.getText().equals("23") || arrHourTf.getText().equals("00")) ||
                !(arrMinsTf.getText().equals("00") || arrMinsTf.getText().equals("01") || arrMinsTf.getText().equals("02") || arrMinsTf.getText().equals("03") ||
                arrMinsTf.getText().equals("04") || arrMinsTf.getText().equals("05") || arrMinsTf.getText().equals("06") || arrMinsTf.getText().equals("07") ||
                arrMinsTf.getText().equals("08") || arrMinsTf.getText().equals("09") || arrMinsTf.getText().equals("10") || arrMinsTf.getText().equals("11") ||
                arrMinsTf.getText().equals("12") || arrMinsTf.getText().equals("13") || arrMinsTf.getText().equals("14") || arrMinsTf.getText().equals("15") ||
                arrMinsTf.getText().equals("16") || arrMinsTf.getText().equals("17") || arrMinsTf.getText().equals("18") || arrMinsTf.getText().equals("19") ||
                arrMinsTf.getText().equals("20") || arrMinsTf.getText().equals("21") || arrMinsTf.getText().equals("22") || arrMinsTf.getText().equals("23") ||
                arrMinsTf.getText().equals("24") || arrMinsTf.getText().equals("25") || arrMinsTf.getText().equals("26") || arrMinsTf.getText().equals("27") ||
                arrMinsTf.getText().equals("28") || arrMinsTf.getText().equals("29") || arrMinsTf.getText().equals("30") || arrMinsTf.getText().equals("31") || 
                arrMinsTf.getText().equals("32") || arrMinsTf.getText().equals("33") || arrMinsTf.getText().equals("34") || arrMinsTf.getText().equals("35") ||
                arrMinsTf.getText().equals("36") || arrMinsTf.getText().equals("37") || arrMinsTf.getText().equals("38") || arrMinsTf.getText().equals("39") ||
                arrMinsTf.getText().equals("40") || arrMinsTf.getText().equals("41") || arrMinsTf.getText().equals("42") || arrMinsTf.getText().equals("43") ||
                arrMinsTf.getText().equals("44") || arrMinsTf.getText().equals("45") || arrMinsTf.getText().equals("46") || arrMinsTf.getText().equals("47") ||
                arrMinsTf.getText().equals("48") || arrMinsTf.getText().equals("49") || arrMinsTf.getText().equals("50") || arrMinsTf.getText().equals("51") ||
                arrMinsTf.getText().equals("52") || arrMinsTf.getText().equals("53") || arrMinsTf.getText().equals("54") || arrMinsTf.getText().equals("55") ||
                arrMinsTf.getText().equals("56") || arrMinsTf.getText().equals("57") || arrMinsTf.getText().equals("58") || arrMinsTf.getText().equals("59"))) {
            warningLbl.setText("Incorrect time format.");
        }
        
        // assigning values from text fields to appropriate data types + storing information + resetting GUI fields
        
        else {

            String datePosted = new SimpleDateFormat("dd-MM-yyyy").format(Calendar.getInstance().getTime());
            String departureAddress = departureTf.getText();
            String departureDateAndTime = deptDateTf.getText() + "-" + deptMonthTf.getText() + "-" + deptYearTf.getText() + "-" + deptHourTf.getText() + deptMinsTf.getText();
            String arrivalAddress = arrivalTf.getText();
            String arrivalDateAndTime = arrDateTf.getText() + "-" + arrMonthTf.getText() + "-" + arrYearTf.getText() + "-" + arrHourTf.getText() + arrMinsTf.getText();
            double distanceKM = Double.parseDouble(distanceTf.getText());
            int seatsAvailable = Integer.parseInt(noOfSeatsTf.getText());
            double pricePerSeat = Double.parseDouble(priceTf.getText());
            String description = descriptionTA.getText();
            boolean luggageAllowed = luggageCB.isSelected();
            boolean smokingAllowed = smokingCB.isSelected();
            boolean petAllowed = petsCB.isSelected();
            boolean chattyDriver = chattyCB.isSelected();
            boolean musicLover = musicLoverCB.isSelected();
            boolean isComplete = false;

            main.Trip t;

            t = new main.Trip(isComplete, datePosted, departureAddress, departureDateAndTime, arrivalAddress, arrivalDateAndTime, distanceKM, 
                    seatsAvailable, pricePerSeat, luggageAllowed, smokingAllowed, petAllowed, chattyDriver, musicLover, description);
            
            main.Driver d = new main.Driver();
            d = cpdb.getDriverByUserID(u.getUserID());
            int driverID = d.getDriverID();

            t.setDriverID(driverID);
            
            cpdb.addTrip(t);
            
            warningLbl.setText("Your trip has been posted!");

            departureTf.setText("");
            deptDateTf.setText("");
            deptMonthTf.setText("");
            deptYearTf.setText("");
            deptHourTf.setText("");
            deptMinsTf.setText("");
            arrivalTf.setText("");
            arrDateTf.setText("");
            arrMonthTf.setText("");
            arrYearTf.setText("");
            arrHourTf.setText("");
            arrMinsTf.setText("");
            distanceTf.setText("");
            noOfSeatsTf.setText("");
            priceTf.setText("");
            descriptionTA.setText("");
            luggageCB.setSelected(false);
            smokingCB.setSelected(false);
            petsCB.setSelected(false);
            chattyCB.setSelected(false);
            musicLoverCB.setSelected(false);
        }
    }//GEN-LAST:event_addTripActionPerformed

    private void arrYearTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arrYearTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_arrYearTfActionPerformed

    private void arrMinsTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arrMinsTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_arrMinsTfActionPerformed

    private void arrMonthTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arrMonthTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_arrMonthTfActionPerformed

    private void arrHourTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arrHourTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_arrHourTfActionPerformed

    private void arrDateTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arrDateTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_arrDateTfActionPerformed

    private void deptMinsTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deptMinsTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deptMinsTfActionPerformed

    private void deptHourTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deptHourTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deptHourTfActionPerformed

    private void deptYearTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deptYearTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deptYearTfActionPerformed

    private void deptDateTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deptDateTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deptDateTfActionPerformed

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        //switch to the Login screen
        GUI.LoginGUI l = new GUI.LoginGUI();

        // Get the size of the active window
        int sizeH = this.getSize().height;
        int sizeW = this.getSize().width;

        // Get the location of the active window
        int currX = this.getLocation().x;
        int currY = this.getLocation().y;

        // Set the size of the new window
        l.setSize(sizeW, sizeH);

        // Set the location of the new window
        l.setLocation(currX, currY);

        // Hide the active window, show the new window
        this.dispose();

        // make it visible
        l.setVisible(true);
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void homeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeBtnActionPerformed
        
        //switch to the Home screen
        GUI.UserHomeGUI uh = new GUI.UserHomeGUI(u);

        // Get the size of the active window
        int sizeH = this.getSize().height;
        int sizeW = this.getSize().width;

        // Get the location of the active window
        int currX = this.getLocation().x;
        int currY = this.getLocation().y;

        // Set the size of the new window
        uh.setSize(sizeW, sizeH);

        // Set the location of the new window
        uh.setLocation(currX, currY);

        // Hide the active window, show the new window
        this.dispose();

        // make it visible
        uh.setVisible(true);
        
        
        
    }//GEN-LAST:event_homeBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewTripGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewTripGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewTripGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewTripGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewTripGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addTrip;
    private javax.swing.JLabel arrDateLbl;
    private javax.swing.JTextField arrDateTf;
    private javax.swing.JTextField arrHourTf;
    private javax.swing.JTextField arrMinsTf;
    private javax.swing.JTextField arrMonthTf;
    private javax.swing.JLabel arrTimeLbl;
    private javax.swing.JTextField arrYearTf;
    private javax.swing.JLabel arrivalLbl;
    private javax.swing.JTextField arrivalTf;
    private javax.swing.JCheckBox chattyCB;
    private javax.swing.JLabel departureLbl;
    private javax.swing.JTextField departureTf;
    private javax.swing.JLabel deptDateLbl;
    private javax.swing.JTextField deptDateTf;
    private javax.swing.JTextField deptHourTf;
    private javax.swing.JTextField deptMinsTf;
    private javax.swing.JTextField deptMonthTf;
    private javax.swing.JLabel deptTimeLbl;
    private javax.swing.JTextField deptYearTf;
    private javax.swing.JLabel descriptionLbl;
    private javax.swing.JTextArea descriptionTA;
    private javax.swing.JTextField distanceTf;
    private javax.swing.JPanel headerPnl;
    private javax.swing.JLabel heading1Lbl;
    private javax.swing.JButton homeBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JCheckBox luggageCB;
    private javax.swing.JCheckBox musicLoverCB;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JLabel noOfSeatsLbl;
    private javax.swing.JTextField noOfSeatsTf;
    private javax.swing.JCheckBox petsCB;
    private javax.swing.JLabel preferencesLbl;
    private javax.swing.JLabel priceLbl;
    private javax.swing.JTextField priceTf;
    private javax.swing.JCheckBox smokingCB;
    private javax.swing.JLabel warningLbl;
    // End of variables declaration//GEN-END:variables
}
